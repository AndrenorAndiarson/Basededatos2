1.1.7.1 Con operadores básicos de comparación
1. Devuelve todos los productos del fabricante Lenovo. (Sin utilizar INNER JOIN).
SELECT * FROM producto WHERE id_fabricante = ( SELECT id FROM fabricante where nombre='Lenovo');
2. Devuelve todos los datos de los productos que tienen el mismo precio que el producto más
caro del fabricante Lenovo. (Sin utilizar INNER JOIN).
SELECT * FROM producto WHERE precio=(SELECT MAX(precio)   FROM producto  
WHERE producto.id_fabricante=(SELECT id FROM fabricante WHERE nombre = 'Lenovo'))
3. Lista el nombre del producto más caro del fabricante Lenovo.
SELECT * FROM producto WHERE precio =(SELECT MAX(precio)   FROM producto  
WHERE producto.id_fabricante=(SELECT id FROM fabricante WHERE nombre = 'Lenovo') and id_fabricante=(SELECT id FROM fabricante WHERE nombre = 'Lenovo'))
4. Lista el nombre del producto más barato del fabricante Hewlett-Packard.
SELECT * FROM producto WHERE precio =(SELECT MIN(precio)   FROM producto  
WHERE producto.id_fabricante=(SELECT id FROM fabricante WHERE nombre = 'Hewlett-Packard') and id_fabricante=(SELECT id FROM fabricante WHERE nombre = 'Hewlett-Packard'))
5. Devuelve todos los productos de la base de datos que tienen un precio mayor o igual al
producto más caro del fabricante Lenovo.
SELECT * FROM producto WHERE precio >=(SELECT avg(precio)   FROM producto  
WHERE producto.id_fabricante=(SELECT id FROM fabricante WHERE nombre = 'Lenovo') and id_fabricante=(SELECT id FROM fabricante WHERE nombre = 'Lenovo'))
6. Lista todos los productos del fabricante Asus que tienen un precio superior al precio medio
de todos sus productos.
SELECT * FROM producto WHERE precio >=(SELECT avg(precio)   FROM producto  
WHERE producto.id_fabricante=(SELECT id FROM fabricante WHERE nombre = 'Asus') and id_fabricante=(SELECT id FROM fabricante WHERE nombre = 'Asus'))
1.1.7.2 Subconsultas con ALL y ANY
8. Devuelve el producto más caro que existe en la tabla producto sin hacer uso
de MAX, ORDER BY ni LIMIT.
SELECT * FROM producto where precio >= all (SELECT max(precio) FROM producto)
9. Devuelve el producto más barato que existe en la tabla producto sin hacer uso
de MIN, ORDER BY ni LIMIT.
SELECT * FROM producto where precio <= all (SELECT min(precio) FROM producto)
10. Devuelve los nombres de los fabricantes que tienen productos asociados.
(Utilizando ALL o ANY).
select * from fabricante where fabricante.id = ANY(select id_fabricante from producto)
11. Devuelve los nombres de los fabricantes que no tienen productos asociados.
(Utilizando ALL o ANY).
select * from fabricante where fabricante.id=ANY(select id_fabricante from producto where id_fabricante is null)
1.1.7.3 Subconsultas con IN y NOT IN
12. Devuelve los nombres de los fabricantes que tienen productos asociados. (Utilizando IN o NOT IN).
SELECT fabricante.nombre FROM fabricante
WHERE fabricante.id IN (SELECT fabricante.id FROM producto);
13. Devuelve los nombres de los fabricantes que no tienen productos asociados. (Utilizando IN o NOT IN).
SELECT fabricante.nombre FROM fabricante
WHERE fabricante.id NOT IN (SELECT producto.id_fabricante FROM producto);
1.1.7.4 Subconsultas con EXISTS y NOT EXISTS
14. Devuelve los nombres de los fabricantes que tienen productos asociados. (Utilizando EXISTS o NOT EXISTS).
SELECT fabricante.nombre FROM fabricante
WHERE EXISTS (SELECT 1 FROM producto WHERE producto.id_fabricante =fabricante.id);
15. Devuelve los nombres de los fabricantes que no tienen productos asociados. (Utilizando EXISTS o NOT EXISTS).
SELECT fabricante.nombre FROM fabricante
WHERE NOT EXISTS (SELECT 1 FROM producto WHERE producto.id_fabricante =fabricante.id);
1.1.7.5 Subconsultas correlacionadas
16. Lista el nombre de cada fabricante con el nombre y el precio de su producto más caro.
SELECT fabricante.nombre, producto.nombre,producto.precio FROM fabricante, producto
WHERE producto.id_fabricante=fabricante.id AND producto.precio=(SELECT MAX(producto.precio) FROM producto WHERE fabricante.id=producto.id_fabricante)
17. Devuelve un listado de todos los productos que tienen un precio mayor o igual a la media de todos los productos de su mismo fabricante.
SELECT fabricante.nombre, producto.nombre,producto.precio FROM fabricante, producto
WHERE producto.precio>=(SELECT AVG(producto.precio) FROM producto WHERE fabricante.id=producto.id_fabricante)
18. Lista el nombre del producto más caro del fabricante Lenovo.
SELECT fabricante.nombre, producto.nombre,producto.precio FROM producto, fabricante WHERE fabricante.id=(SELECT fabricante.id FROM fabricante WHERE fabricante.nombre='Lenovo') AND producto.precio=(SELECT MAX(producto.precio) FROM producto WHERE fabricante.id=(SELECT fabricante.id FROM fabricante WHERE fabricante.nombre='Lenovo'));
1.1.8 Subconsultas (En la cláusula HAVING)
19. Devuelve un listado con todos los nombres de los fabricantes que tienen el mismo número de productos que el fabricante Lenovo.
SELECT(SELECT fabricante.nombre FROM fabricante WHERE id=id_fabricante) AS n,
 COUNT(producto.id_fabricante),producto.id_fabricante FROM producto
GROUP BY producto.id_fabricante
HAVING COUNT(producto.id_fabricante)=(
    SELECT COUNT(id) FROM producto WHERE producto.id_fabricante =
(SELECT id FROM fabricante WHERE nombre="Lenovo"))
